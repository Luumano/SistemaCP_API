{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\nconst initialProductState = {\n  produtos: []\n};\nconst produtoReducer = (state = initialProductState, action) => {\n  switch (action.type) {\n    case 'SET_PRODUTOS':\n      return {\n        ...state,\n        produtos: action.payload\n      };\n    case 'ADD_PRODUTO':\n      return {\n        ...state,\n        produtos: [...state.produtos, action.payload]\n      };\n    case 'UPDATE_PRODUTO':\n      return {\n        ...state,\n        produtos: state.produtos.map(prod => prod.id === action.payload.id ? action.payload : prod)\n      };\n    case 'DELETE_PRODUTO':\n      return {\n        ...state,\n        produtos: state.produtos.filter((_, idx) => idx !== action.payload)\n      };\n    default:\n      return state;\n  }\n};\nconst rootReducer = combineReducers({\n  produto: produtoReducer\n});\nconst store = createStore(rootReducer);\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","initialProductState","produtos","produtoReducer","state","action","type","payload","map","prod","id","filter","_","idx","rootReducer","produto","store"],"sources":["C:/Users/mgerm/SistemaSCP_Main/src/store.js"],"sourcesContent":["import { createStore, combineReducers } from 'redux';\n\nconst initialProductState = {\n    produtos: []\n};\n\nconst produtoReducer = (state = initialProductState, action) => {\n    switch (action.type) {\n        case 'SET_PRODUTOS':\n            return {\n                ...state,\n                produtos:  action.payload\n            };\n        case 'ADD_PRODUTO':\n            return {\n                ...state,\n                produtos: [...state.produtos, action.payload]\n            };\n        case 'UPDATE_PRODUTO':\n            return{\n                ...state,\n                produtos: state.produtos.map(prod => prod.id === action.payload.id ? action.payload : prod)\n            };\n        case 'DELETE_PRODUTO':\n            return {\n                ...state,\n                produtos: state.produtos.filter((_, idx) => idx !== action.payload)\n            };\n        default:\n            return state;\n    }\n};\n\nconst rootReducer = combineReducers({\n    produto: produtoReducer\n});\n\nconst store = createStore(rootReducer);\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AAEpD,MAAMC,mBAAmB,GAAG;EACxBC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGH,mBAAmB,EAAEI,MAAM,KAAK;EAC5D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,cAAc;MACf,OAAO;QACH,GAAGF,KAAK;QACRF,QAAQ,EAAGG,MAAM,CAACE;MACtB,CAAC;IACL,KAAK,aAAa;MACd,OAAO;QACH,GAAGH,KAAK;QACRF,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAQ,EAAEG,MAAM,CAACE,OAAO;MAChD,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAM;QACF,GAAGH,KAAK;QACRF,QAAQ,EAAEE,KAAK,CAACF,QAAQ,CAACM,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,GAAGL,MAAM,CAACE,OAAO,GAAGE,IAAI;MAC9F,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGL,KAAK;QACRF,QAAQ,EAAEE,KAAK,CAACF,QAAQ,CAACS,MAAM,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAKA,GAAG,KAAKR,MAAM,CAACE,OAAO;MACtE,CAAC;IACL;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;AAED,MAAMU,WAAW,GAAGd,eAAe,CAAC;EAChCe,OAAO,EAAEZ;AACb,CAAC,CAAC;AAEF,MAAMa,KAAK,GAAGjB,WAAW,CAACe,WAAW,CAAC;AAEtC,eAAeE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}