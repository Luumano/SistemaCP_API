{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\nconst initialProductState = {\n  produtos: []\n};\nconst produtoReducer = (state = initialProductState, action) => {\n  switch (action.type) {\n    case 'ADD_PRODUTO':\n      return {\n        ...state,\n        produtos: [...state.produtos, action.payload]\n      };\n    case 'DELETE_PRODUTO':\n      return {\n        ...state,\n        produtos: state.produtos.filter((_, index) => index !== action.payload)\n      };\n    case 'UPDATE_PRODUTO':\n      return {\n        ...state,\n        produtos: state.produtos.map((produto, index) => index === action.payload.index ? action.payload.updatedProduto : produto)\n      };\n    default:\n      return state;\n  }\n};\nconst rootReducer = combineReducers({\n  produto: produtoReducer\n});\nconst store = createStore(rootReducer);\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","initialProductState","produtos","produtoReducer","state","action","type","payload","filter","_","index","map","produto","updatedProduto","rootReducer","store"],"sources":["C:/Users/mgerm/SistemaSCP_Main/src/store.js"],"sourcesContent":["import { createStore, combineReducers } from 'redux';\n\nconst initialProductState = {\n    produtos: []\n};\n\nconst produtoReducer = (state = initialProductState, action) => {\n    switch (action.type) {\n        case 'ADD_PRODUTO':\n            return {\n                ...state,\n                produtos: [...state.produtos, action.payload]\n            };\n        case 'DELETE_PRODUTO':\n            return {\n                ...state,\n                produtos: state.produtos.filter((_, index) => index !== action.payload)\n            };\n        case 'UPDATE_PRODUTO':\n            return {\n                ...state,\n                produtos: state.produtos.map((produto, index) => \n                index === action.payload.index ? action.payload.updatedProduto : produto)\n            };\n        default:\n            return state;\n    }\n};\n\nconst rootReducer = combineReducers({\n    produto: produtoReducer\n});\n\nconst store = createStore(rootReducer);\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AAEpD,MAAMC,mBAAmB,GAAG;EACxBC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGH,mBAAmB,EAAEI,MAAM,KAAK;EAC5D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,aAAa;MACd,OAAO;QACH,GAAGF,KAAK;QACRF,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAQ,EAAEG,MAAM,CAACE,OAAO;MAChD,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGH,KAAK;QACRF,QAAQ,EAAEE,KAAK,CAACF,QAAQ,CAACM,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAKL,MAAM,CAACE,OAAO;MAC1E,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGH,KAAK;QACRF,QAAQ,EAAEE,KAAK,CAACF,QAAQ,CAACS,GAAG,CAAC,CAACC,OAAO,EAAEF,KAAK,KAC5CA,KAAK,KAAKL,MAAM,CAACE,OAAO,CAACG,KAAK,GAAGL,MAAM,CAACE,OAAO,CAACM,cAAc,GAAGD,OAAO;MAC5E,CAAC;IACL;MACI,OAAOR,KAAK;EACpB;AACJ,CAAC;AAED,MAAMU,WAAW,GAAGd,eAAe,CAAC;EAChCY,OAAO,EAAET;AACb,CAAC,CAAC;AAEF,MAAMY,KAAK,GAAGhB,WAAW,CAACe,WAAW,CAAC;AAEtC,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}